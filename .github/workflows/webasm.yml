name: WebAssembly

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-latest
    
    env:
      RELEASE_NAME: raylib-dev_webassembly
    
    steps:
    - name: Checkout
      uses: actions/checkout@master
  
    - name: Setup emsdk
      uses: mymindstorm/setup-emsdk@v12
      with:
        version: 3.1.30
        actions-cache-folder: 'emsdk-cache'

    - name: Get RayLib
      run: |
        git clone https://github.com/raysan5/raylib && cd raylib
      shell: bash
    
    - name: Setup Release Version
      run: |
        echo "RELEASE_NAME=raylib-${{ github.event.release.tag_name }}_webassembly" >> $GITHUB_ENV
      shell: bash
      if: github.event_name == 'release' && github.event.action == 'published'

    - name: Setup Environment
      run: | 
        mkdir build
        cd build
        mkdir ${{ env.RELEASE_NAME }}
        cd ${{ env.RELEASE_NAME }}
        mkdir include
        mkdir lib
        cd ../..
   
    - name: Build Library
      run: |
        cd src
        emcc -v
        make PLATFORM=PLATFORM_WEB EMSDK_PATH="D:/a/raylib/raylib/emsdk-cache/emsdk-main" RAYLIB_RELEASE_PATH="../build/${{ env.RELEASE_NAME }}/lib" -B
        cd ..
  
    - name: Generate Artifacts
      run: |
        copy /Y .\src\raylib.h .\build\${{ env.RELEASE_NAME }}\include\raylib.h
        copy /Y .\src\raymath.h .\build\${{ env.RELEASE_NAME }}\include\raymath.h
        copy /Y .\src\rlgl.h .\build\${{ env.RELEASE_NAME }}\include\rlgl.h
        copy /Y .\CHANGELOG .\build/${{ env.RELEASE_NAME }}\CHANGELOG
        copy /Y .\README.md .\build\${{ env.RELEASE_NAME }}\README.md
        copy /Y .\LICENSE .\build\${{ env.RELEASE_NAME }}\LICENSE
        cd build
        7z a ./${{ env.RELEASE_NAME }}.zip ./${{ env.RELEASE_NAME }}
        dir
      shell: cmd
    
    - name: Create hash
      run: git rev-parse HEAD > rev-hash.txt

    - uses: dev-drprasad/delete-tag-and-release@v0.2.1
      name: Delete latest alpha tag and release
      with:
        tag_name: alpha
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Sleep for 5 seconds, to allow the tag to be deleted (why?)
      run: sleep 5s    
      shell: bash

    - uses: ncipollo/release-action@v1.12.0
      name: Create new tag and release and upload artifacts
      with:
        name: alpha
        commit: main
        tag: alpha
        prerelease: true
        artifacts: "./build/${{ env.RELEASE_NAME }}.zip"
        body: Latest Alpha release on this branch
        token: ${{ secrets.GITHUB_TOKEN }}
