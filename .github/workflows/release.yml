name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build_and_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up C environment
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libsdl2-dev

    - name: Set up SDL2 for windows
      if: matrix.os == 'windows-latest'
      uses: libsdl-org/setup-sdl@main
      id: sdl
      with:
        version: sdl2-latest

    - name: Set up Windows environment
      run: |
        # Download and install make
        Invoke-WebRequest -Uri https://ftp.gnu.org/gnu/make/make-4.3.0-without-guile-w32.zip -OutFile make.zip
        Expand-Archive -Path make.zip -DestinationPath C:\tools\make
        $env:PATH += ";C:\tools\make\bin"

        # Download and install SDL2
        Invoke-WebRequest -Uri https://libsdl.org/release/SDL2-devel-2.0.16-mingw.tar.gz -OutFile sdl2.tar.gz
        tar -xf sdl2.tar.gz -C C:\tools
        $env:PATH += ";C:\tools\SDL2-2.0.16\i686-w64-mingw32\bin"

        # Install MinGW
        choco install mingw -y
        $env:PATH += ";C:\tools\mingw64\bin"

    - name: Clone dome repository
      run: git clone --branch v1.8.2 --depth 1 https://github.com/domeengine/dome ./dome

    - name: Process and copy icons (windows)
      if: matrix.os == 'windows-latest'
      run: |
        cp ./popup/_assets/icon.ico ./popup/_assets/dome-circle.ico
        cp ./popup/_assets/icon.ico ./dome/assets/dome-circle.ico
        windres ./popup/_assets/icon.rc -O coff -o ./dome/assets/icon32.res
        windres ./popup/_assets/icon.rc -O coff -o ./dome/assets/icon64.res

    - name: Process and copy icons (linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        cp ./popup/_assets/icon.ico ./popup/_assets/dome-circle.ico
        cp ./popup/_assets/icon.ico ./dome/assets/dome-circle.ico
        objcopy -I binary -O elf32-i386 -B i386 ./popup/_assets/icon.ico ./dome/assets/icon32.res
        objcopy -I binary -O elf64-x86-64 -B i386 ./popup/_assets/icon.ico ./dome/assets/icon64.res

    - name: Build DOME
      run: make -C ./dome/

    - name: Use DOME (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        ./dome/dome nest ./popup/
        ./dome/dome fuse game.egg popup-linux
    
    - name: Use DOME (Windows)
      if: matrix.os == 'windows-latest'
      run: |  
        ./dome/dome-x64.exe nest ./popup/
        ./dome/dome-x64.exe fuse game.egg popup-x64.exe

    - uses: dev-drprasad/delete-tag-and-release@v0.2.1
      name: Delete latest alpha tag and release
      with:
        tag_name: alpha
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Sleep for 5 seconds, to allow the tag to be deleted (why?)
      run: sleep 5s    
      shell: bash

    - uses: ncipollo/release-action@v1.12.0
      name: Create new tag and release and upload artifacts
      with:
        name: alpha
        commit: main
        tag: alpha
        prerelease: true
        artifacts: |
          ./dome/dome
          ./dome/dome-x64.exe
          ./dome/popup-linux
          ./dome/popup-x64.exe
        body: Latest Alpha release on this branch
        token: ${{ secrets.GITHUB_TOKEN }}
