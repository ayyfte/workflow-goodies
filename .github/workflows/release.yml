name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build_and_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up C environment
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libsdl2-dev

#    - name: Set up Windows environment
#      if: matrix.os == 'windows-latest'
#      run: |
#        choco install make --yes
#        choco install sdl2 --yes
#        choco install mingw --yes
#        export PATH=$PATH:/c/tools/mingw64/bin

    - name: Clone dome repository
      run: git clone --branch v1.8.2 --depth 1 https://github.com/domeengine/dome ./dome

    - name: Process and copy icons
      run: |
        cp ./popup/_assets/icon.ico ./dome/assets/dome-circle.ico
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          windres ./popup/_assets/icon.ico -O coff -o ./dome/assets/icon32.res
          windres ./popup/_assets/icon.ico -O coff -o ./dome/assets/icon64.res
        fi
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          objcopy -I binary -O elf32-i386 -B i386 ./popup/_assets/icon.ico ./dome/assets/icon32.res
          objcopy -I binary -O elf64-x86-64 -B i386 ./popup/_assets/icon.ico ./dome/assets/icon64.res
        fi

    - name: Build dome
      run: make -C ./dome/

    - name: Run dome
      run: |
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          ./dome/dome nest ./popup/
          ./dome/dome fuse game.egg popup-linux
        elif [ "${{ matrix.os }}" == "windows-latest" ]; then
          if [ "${{ matrix.arch }}" == "x64" ]; then
            ./dome/dome-x64.exe nest ./popup/
            ./dome/dome-x64.exe fuse game.egg popup-x64.exe
          else
            ./dome/dome-x32.exe nest ./popup/
            ./dome/dome-x32.exe fuse game.egg popup-x86.exe
          fi
        fi

    - uses: dev-drprasad/delete-tag-and-release@v0.2.1
      name: Delete latest alpha tag and release
      with:
        tag_name: alpha
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Sleep for 5 seconds, to allow the tag to be deleted (why?)
      run: sleep 5s    
      shell: bash

    - uses: ncipollo/release-action@v1.12.0
      name: Create new tag and release and upload artifacts
      with:
        name: alpha
        commit: main
        tag: alpha
        prerelease: true
        artifacts: |
          ./dome/dome
          ./dome/dome-x32.exe
          ./dome/dome-x64.exe
          ./dome/popup-linux
          ./dome/popup-x86.exe
          ./dome/popup-x64.exe
        body: Latest Alpha release on this branch
        token: ${{ secrets.GITHUB_TOKEN }}
